#!/bin/bash
################## CHANGE ME ########################
TO_DEPLOY="./" #The path to deploy - default: ./
USER="root" #SERVER user goes here - if not root
REMOTE="192.168.0.0" #SERVER IP goes here
REMOTE_PATH="/var/www/html" #PATH on REMOTE SERVER
REMOTE2="$REMOTE"
REMOTE_PATH2="$REMOTE_PATH"
EXCLUDEs='--exclude-from=.liftoffignore' #Files to exclude from deploy
####################################################
GREEN='\033[0;32m' #green
NC='\033[0m' #no-color
MALFUNCTION="üë®‚ÄçüöÄ Huston, We have a problem! Make sure all your parameters are correct"
OOPS="üöÄüí•üî• OOPS! Try using ${GREEN}ready${NC} or ${GREEN}ready go${NC}"

################## DONT EDIT BELOW  üëÄ ########################
if [ $# -eq 0 ]
  then
    echo -e "$MALFUNCTION"
elif [ "$1" == "ready" ]
  then
    if [[ -z "$2" ]]
      then
        echo "Running prelaunch ‚úÖ check to ü™ê $REMOTE..."
        rsync --dry-run -az --force --delete --stats --human-readable --info=progress2 $EXCLUDES -e "ssh -p22" $TO_DEPLOY "$USER"@"$REMOTE":"$REMOTE_PATH"
    elif [ "$2" == "go" ]
      then
        echo "And we have üöÄ Liftoff to ü™ê - $REMOTE2..."
        rsync -az --force --delete --stats --human-readable --info=progress2 $EXCLUDES -e "ssh -p22" $TO_DEPLOY "$USER"@"$REMOTE2":"$REMOTE_PATH2"
    else
      echo -e "$MALFUNCTION"
    fi
  else
    echo -e "$OOPS"
fi
